@import "../themes/gasco.globals.scss";
// @import "../components/menu/menu.md.vars";
@import "../themes/gasco.globals.md.scss";

// Material Design Menu
// --------------------------------------------------

/// @prop - Background of the menu
$menu-background:            $background-color !default;

/// @prop - Box shadow of the menu
$menu-box-shadow:            4px 0px 16px rgba(0, 0, 0, 0.18) !default;

// GASCO Font Family
// --------------------------------------------------

html {
  --gasco-font-family: var(--gasco-default-font);
}

body {
  background: var(--gasco-background-color);
}

body.backdrop-no-scroll {
  overflow: hidden;
}

// TODO: Block scrolling in gasco-content, breaks inside gasco-modal
// body.backdrop-no-scroll .gasco-page > gasco-content {
//   --overflow: hidden;
// }

// Modal - Card Style
// --------------------------------------------------


gasco-modal.modal-default:not(.overlay-hidden) ~ gasco-modal.modal-default {
  --backdrop-opacity: 0;
  --box-shadow: none;
}

// Gasco Colors
// --------------------------------------------------
// Generates the color classes and variables based on the
// colors map

@mixin generate-color($color-name) {
  $value: map-get($colors, $color-name);

  $base: map-get($value, base);
  $contrast: map-get($value, contrast);
  $shade: map-get($value, shade);
  $tint: map-get($value, tint);

  --gasco-color-base: var(--gasco-color-#{$color-name}, #{$base}) !important;
  --gasco-color-base-rgb: var(--gasco-color-#{$color-name}-rgb, #{color-to-rgb-list($base)}) !important;
  --gasco-color-contrast: var(--gasco-color-#{$color-name}-contrast, #{$contrast}) !important;
  --gasco-color-contrast-rgb: var(--gasco-color-#{$color-name}-contrast-rgb, #{color-to-rgb-list($contrast)}) !important;
  --gasco-color-shade: var(--gasco-color-#{$color-name}-shade, #{$shade}) !important;
  --gasco-color-tint: var(--gasco-color-#{$color-name}-tint, #{$tint}) !important;
}

@each $color-name, $value in $colors {
  .gasco-color-#{$color-name} {
    @include generate-color($color-name);
  }
}


// Page Container Structure
// --------------------------------------------------

.gasco-page {
  @include position(0, 0, 0, 0);

  display: flex;
  position: absolute;

  flex-direction: column;
  justify-content: space-between;

  contain: layout size style;
  overflow: hidden;
  z-index: $z-index-page-container;
}

.split-pane-visible > .gasco-page.split-pane-main {
  position: relative;
}

gasco-route,
gasco-route-redirect,
gasco-router,
gasco-select-option,
gasco-nav-controller,
gasco-menu-controller,
gasco-action-sheet-controller,
gasco-alert-controller,
gasco-loading-controller,
gasco-modal-controller,
gasco-picker-controller,
gasco-popover-controller,
gasco-toast-controller,
.gasco-page-hidden,
[hidden] {
  /* stylelint-disable-next-line declaration-no-important */
  display: none !important;
}

.gasco-page-invisible {
  opacity: 0;
}

.can-go-back > gasco-header gasco-back-button {
  display: block;
}


// Gasco Safe Margins
// --------------------------------------------------


@supports (padding-top: 20px) {
  html {
    --gasco-safe-area-top: var(--gasco-statusbar-padding);
  }
}

// TODO: remove once Safari 11.2 is no longer supported
@supports (padding-top: constant(safe-area-inset-top)) {
  html {
    --gasco-safe-area-top: constant(safe-area-inset-top);
    --gasco-safe-area-bottom: constant(safe-area-inset-bottom);
    --gasco-safe-area-left: constant(safe-area-inset-left);
    --gasco-safe-area-right: constant(safe-area-inset-right);
  }
}

@supports (padding-top: env(safe-area-inset-top)) {
  html {
    --gasco-safe-area-top: env(safe-area-inset-top);
    --gasco-safe-area-bottom: env(safe-area-inset-bottom);
    --gasco-safe-area-left: env(safe-area-inset-left);
    --gasco-safe-area-right: env(safe-area-inset-right);
  }
}


// Global Card Styles
// --------------------------------------------------

gasco-card.gasco-color .gasco-inherit-color,
gasco-card-header.gasco-color .gasco-inherit-color {
  color: inherit;
}


// Menu Styles
// TODO: Find a better long term solution for this
// --------------------------------------------------

.menu-content {
  @include transform(translate3d(0, 0, 0));
}

.menu-content-open {
  cursor: pointer;
  touch-action: manipulation;

  // the containing element itself should be clickable but
  // everything inside of it should not clickable when menu is open
  pointer-events: none;
}


.menu-content-reveal {
  box-shadow: $menu-box-shadow;
}

.menu-content-push {
  box-shadow: $menu-box-shadow;
}

// Accordion Styles
gasco-accordion-group.accordion-group-expand-inset > gasco-accordion:first-of-type {
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
}
gasco-accordion-group.accordion-group-expand-inset > gasco-accordion:last-of-type {
  border-bottom-left-radius: 8px;
  border-bottom-right-radius: 8px;
}
gasco-accordion-group > gasco-accordion:last-of-type gasco-item[slot="header"] {
  --border-width: 0px;
}

gasco-accordion.accordion-animated > [slot="header"] .gasco-accordion-toggle-icon {
  transition: 300ms transform cubic-bezier(0.25, 0.8, 0.5, 1);
}

@media (prefers-reduced-motion: reduce) {
  gasco-accordion .gasco-accordion-toggle-icon {
    /* stylelint-disable declaration-no-important */
    transition: none !important;
  }
}
/**
 * The > [slot="header"] selector ensures that we do
 * not modify toggle icons for any nested accordions. The state
 * of one accordion should not affect any accordions inside
 * of a nested accordion group.
 */
gasco-accordion.accordion-expanding > [slot="header"] .gasco-accordion-toggle-icon,
gasco-accordion.accordion-expanded > [slot="header"] .gasco-accordion-toggle-icon {
  transform: rotate(180deg);
}

gasco-accordion-group.accordion-group-expand-inset.md > gasco-accordion.accordion-previous gasco-item[slot="header"] {
  --border-width: 0px;
  --inner-border-width: 0px;
}

gasco-accordion-group.accordion-group-expand-inset.md > gasco-accordion.accordion-expanding:first-of-type,
gasco-accordion-group.accordion-group-expand-inset.md > gasco-accordion.accordion-expanded:first-of-type {
  margin-top: 0;
}

gasco-input input::-webkit-date-and-time-value {
  text-align: start;
}
